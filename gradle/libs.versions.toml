[versions]
spring-kafka = "3.0.16"
spring-boot = "3.1.4"
grpc = "1.58.0"
mapstruct = "1.5.5.Final"
testcontainers = "1.19.1"
jwt = "0.11.5"

[plugins]
spring-plugin = { id = "org.springframework.boot", version.ref = "spring-boot" }
protobuf-plugin = {id = "com.google.protobuf", version = "0.9.4"}

[libraries]
# spring boot startets
spring-web = { module = "org.springframework.boot:spring-boot-starter-web", version.ref = "spring-boot" }
spring-jpa = {module = "org.springframework.boot:spring-boot-starter-data-jpa", version.ref = "spring-boot" }
spring-actuator = { module = "org.springframework.boot:spring-boot-starter-actuator", version.ref = "spring-boot" }
spring-security = { module = "org.springframework.boot:spring-boot-starter-security", version.ref = "spring-boot"}
spring-validator = { module = "org.springframework.boot:spring-boot-starter-validation", version.ref = "spring-boot" }
spring-test = { module = "org.springframework.boot:spring-boot-starter-test", version.ref = "spring-boot" }
spring-grpc = {module = "net.devh:grpc-spring-boot-starter", version = "2.15.0.RELEASE"}
spring-grpc-client = { module = "net.devh:grpc-client-spring-boot-starter", version = "2.15.0.RELEASE"}
spring-email = {module = "org.springframework.boot:spring-boot-starter-mail", version.ref = "spring-boot"}
spring-web-flux = {module = "org.springframework.boot:spring-boot-starter-webflux", version.ref = "spring-boot" }
spring-kafka = {module = "org.springframework.kafka:spring-kafka", version.ref = "spring-kafka"}


# grpc
grpc-protobuf = { module = "io.grpc:grpc-protobuf", version.ref = "grpc" }
grpc-stub = { module = "io.grpc:grpc-stub", version.ref = "grpc" }
protobuf-java-util = { module = "com.google.protobuf:protobuf-java-util", version = "3.23.0" }
protobuf-java = { module = "com.google.protobuf:protobuf-java", version = "3.23.0" }

javax-annotation = { module = 'javax.annotation:javax.annotation-api', version = "1.3.2" }

lombok = { module = "org.projectlombok:lombok", version = "1.18.26" }
liquibase = { module = "org.liquibase:liquibase-core", version = "4.24.0" }
mapstruct = {module = "org.mapstruct:mapstruct", version.ref ="mapstruct"}
mapstructAnnotationProcessor = {module = "org.mapstruct:mapstruct-processor", version.ref = "mapstruct"}
postgresql-driver = { module = "org.postgresql:postgresql", version = "42.6.0" }

#Test libraries
testcontainers-core = { module = "org.testcontainers:testcontainers", version.ref = "testcontainers" }
testcontainers-postgres = { module = "org.testcontainers:postgresql", version.ref = "testcontainers" }
testcontainres-jupiter = { module = "org.testcontainers:junit-jupiter", version.ref = "testcontainers" }

jupiter = { module = "org.junit.jupiter:junit-jupiter", version = "5.10.0" }
grpc-testing = { module = "io.grpc:grpc-testing", version.ref = "grpc" }

# jwt
jwt-api = { module = "io.jsonwebtoken:jjwt-api", version.ref = "jwt" }
jwt-impl = { module = "io.jsonwebtoken:jjwt-impl", version.ref = "jwt" }
jwt-jackson = { module = "io.jsonwebtoken:jjwt-jackson", version.ref = "jwt" }